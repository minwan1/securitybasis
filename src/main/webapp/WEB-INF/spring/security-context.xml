<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
		
	<security:http auto-config="true" use-expressions="true"> <!-- 앞에 security는 네임스페이스임    expressio은 ip와같이 접근 권한 제한을 좀더풍부하게 할수 있음-->
		<security:intercept-url pattern="/admin/usermanager/**" access="hasAuthority('USER_MANAGER')" />
		<!--<security:intercept-url pattern="/manager/**" access="hasAuthority(ROLE_USER)" /> hasRole/hasAuthority 같은뜻 저권한 가지만 사람만 접근가 -->
		<security:intercept-url pattern="/member/**" access="hasAuthority('USER')" /> <!-- 인증된 사람만 접근 가능  -->
		<security:intercept-url pattern="/user/**" access="hasAuthority('USER')" /> <!-- 인증된 사람만 접근 가능  -->
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:form-login 
		login-page="/login" 
		authentication-failure-url="/login?fail=true"/>
		<security:logout logout-success-url="/logout" />
	</security:http>
	
	
	<security:authentication-manager alias="authenticationManager"> <!-- 인메모리 사용자 db방벙 --> 
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" />
		</security:authentication-provider> 
	</security:authentication-manager>
	
	
                                             
</beans>
